Question 1: You have a Laravel application with a form that submits user information using a POST request.
Write the code to retrieve the 'name' input field value from the request and store it in a variable called $name.
Answer 1: $name = $request->input('name');

=====================================================================================================================================================

Question 2: In your Laravel application, you want to retrieve the value of the 'User-Agent' header from the current request.
Write the code to accomplish this and store the value in a variable called $userAgent.
Answer 2:

use Illuminate\Http\Request;

// ...

public function yourMethodName(Request $request)
{
    $userAgent = $request->userAgent();

    // Rest of your code...
}
=====================================================================================================================================================

Question 3: You are building an API endpoint in Laravel that accepts a GET request with a 'page' query parameter.
Write the code to retrieve the value of the 'page' parameter from the current request and store it in a variable called $page.
If the parameter is not present, set $page to null.

Answer 3:
use Illuminate\Http\Request;

// Your API endpoint function
public function yourEndpoint(Request $request)
{
    $page = $request->query('page', null);

    // Rest of your code

    // Example usage
    if ($page !== null) {
        // Parameter 'page' is present, do something with $page
    } else {
        // Parameter 'page' is not present
    }
}
=====================================================================================================================================================

Question 4: Create a JSON response in Laravel with the following data:
{
    "message": "Success",
    "data": {
        "name": "John Doe",
        "age": 25
    }
}

Answer 4:
$response = [
    'message' => 'Success',
    'data' => [
        'name' => 'John Doe',
        'age' => 25
    ]
];

return response()->json($response);

=====================================================================================================================================================

Question 5: You are implementing a file upload feature in your Laravel application.
Write the code to handle a file upload named 'avatar' in the current request and store the uploaded file in the 'public/uploads' directory.
Use the original filename for the uploaded file.

Answer 5:
use Illuminate\Support\Facades\Storage;
use Illuminate\Http\Request;

public function uploadAvatar(Request $request)
{
    if ($request->hasFile('avatar')) {
        $file = $request->file('avatar');
        $filename = $file->getClientOriginalName();
        $path = $file->storeAs('uploads', $filename, 'public');
        
        // Do something with the stored file path, such as saving it in the database
        
        return "File uploaded successfully!";
    }
    
    return "No file uploaded.";
}


=====================================================================================================================================================

Question 6: Retrieve the value of the 'remember_token' cookie from the current request in Laravel and store it in a variable called $rememberToken.
If the cookie is not present, set $rememberToken to null.

Answer 6:$rememberToken = request()->cookie('remember_token', null);


=====================================================================================================================================================
Question 7: Create a route in Laravel that handles a POST request to the '/submit' URL.
Inside the route closure, retrieve the 'email' input parameter from the request and store it in a variable called $email.
Return a JSON response with the following data:
{
    "success": true,
    "message": "Form submitted successfully."
}

Answer 7: 

// routes/web.php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

Route::post('/submit', function (Request $request) {
    $email = $request->input('email');

    // Perform any necessary operations with $email

    return response()->json([
        'success' => true,
        'message' => 'Form submitted successfully.'
    ]);
});

=====================================================================================================================================================


